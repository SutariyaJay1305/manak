"""
Django settings for manak project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-1-v^g1@q=i6xwscs4+nuwg#3d#no2)l5etmu3ewzb7fs=s@)i1"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['manakreport.com']


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "main",
    "phonenumber_field",
    "user_payment"
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "manak.urls"
AUTH_USER_MODEL = "main.User"
PHINENUMBER_DEFAULT_REGION = "GB"
PHINENUMBER_DB_FORMAT = "NATIONAL"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR,'templates')],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "manak.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"
STATICFILES_DIRS=[os.path.join(BASE_DIR,'static')]
STATIC_ROOT = os.path.join(BASE_DIR,'assets')

MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

## Stripe
STRIPE_PUBLIC_KEY_TEST = 'pk_test_51OMtsXSFHK4FQej3iyztwejADjhajdOSAds9e4BTz3zDVV1akJ0tY7DBqiLNx4e330AGFPRp9qgKEX5fjduNv7nC00eNW3a0uR'
STRIPE_SECRET_KEY_TEST = 'sk_test_51OMtsXSFHK4FQej3D0Qg25HJQqYgdawG9Q6jklsenb64PVOgsOomxGUd3aSPw5PeI4UAqsInVVDVhaqeJqn53byt00r6E93VE7'
STRIPE_WEBHOOK_SECRET_TEST = 'whsec_568e186636e2868d09cad2e55c993e3a163aa02d4a50dfd9b1fe8d117769283e'
PRODUCT_PRICE = 'price_1OOBwhSFHK4FQej3WVpwasGd'


REDIRECT_DOMAIN = 'http://127.0.0.1:8000'




# gunicorn --bind 0.0.0.0:8000 manak.wsgi

# sudo nano /etc/systemd/system/manak.socket


# [Unit]
# Description=manak socket


# [Socket]
# ListenStream=/run/manak.sock


# [Install]
# WantedBy=sockets.target


# sudo nano /etc/systemd/system/manak.service


# [Unit]
# Description=manak daemon
# Requires=manak.socket
# After=network.target


# [Service]
# User=igor
# Group=www-data
# WorkingDirectory=/home/igor/manak/manak
# ExecStart=/home/igor/manak/env/bin/gunicorn \
#          --access-logfile - \
#          --workers 3 \
#          --bind unix:/run/manak.sock \
#          manak.wsgi:application


# [Install]
# WantedBy=multi-user.target






# sudo systemctl start manak.socket
# sudo systemctl start manak.service
# sudo systemctl enable manak.socket
# sudo systemctl enable manak.service
# # To check Status
# sudo systemctl status manak


# # Restart
# sudo systemctl daemon-reload
# sudo systemctl restart manak




# # NGINX
# sudo nano /etc/nginx/sites-available/manak  


# server {
#    listen 80;
#    server_name manakreport.com www.manakreport.com;


#    location = /favicon.ico { access_log off; log_not_found off; }
#    location /static/ {
#        root /home/igor/manak/manak;
#    }


#    location / {
#        include proxy_params;
#        proxy_pass http://unix:/run/manak.sock;
#    }
# }
# sudo ln -s /etc/nginx/sites-available/manak /etc/nginx/sites-enabled
# sudo systemctl restart nginx


# sudo nano /etc/nginx/nginx.conf

# server {
#  listen 80;
#  server_name fdcr.us 142.93.182.50;
# location = /favicon.ico { access_log off; log_not_found off; }
#  location /static/ {
#  root /home/igor/fdcr/fdcrv;
#  }
# location / {
#  proxy_set_header Host $http_host;
#  proxy_set_header X-Real-IP $remote_addr;
#  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#  proxy_set_header X-Forwarded-Proto $scheme;
#  proxy_pass http://unix:/run/fdcr.sock;
#  }
# }
# server {
#  listen 80;
#  server_name manakreport.com www.manakreport.com;
# location = /favicon.ico { access_log off; log_not_found off; }
#  location /static/ {
#  root /home/igor/manak/manak;
#  }
# location / {
#  proxy_set_header Host $http_host;
#  proxy_set_header X-Real-IP $remote_addr;
#  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#  proxy_set_header X-Forwarded-Proto $scheme;
#  proxy_pass http://unix:/run/manak.sock;
#  }
# }


# sudo systemctl restart manak
# sudo systemctl daemon-reload
# sudo systemctl restart manak.socket manak.service
# sudo nginx -t && sudo systemctl restart nginx