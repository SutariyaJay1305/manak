# Generated by Django 4.2.7 on 2023-11-28 02:19

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="MainTables",
            fields=[
                ("table_id", models.AutoField(primary_key=True, serialize=False)),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                (
                    "modified_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("carat_range", models.TextField(max_length=25)),
                ("tabel_date", models.DateField()),
                ("shape", models.TextField(max_length=25)),
                ("text_description", models.TextField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="UIManager",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                ("modified_date", models.DateTimeField(auto_now=True)),
                ("text_description", models.TextField(max_length=200)),
                ("UI_position", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="DataManager",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                (
                    "modified_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("D_IF", models.DecimalField(decimal_places=2, max_digits=5)),
                ("D_VV1", models.DecimalField(decimal_places=2, max_digits=5)),
                ("D_VV2", models.DecimalField(decimal_places=2, max_digits=5)),
                ("D_VS1", models.DecimalField(decimal_places=2, max_digits=5)),
                ("D_VS2", models.DecimalField(decimal_places=2, max_digits=5)),
                ("D_SI1", models.DecimalField(decimal_places=2, max_digits=5)),
                ("D_SI2", models.DecimalField(decimal_places=2, max_digits=5)),
                ("E_IF", models.DecimalField(decimal_places=2, max_digits=5)),
                ("E_VV1", models.DecimalField(decimal_places=2, max_digits=5)),
                ("E_VV2", models.DecimalField(decimal_places=2, max_digits=5)),
                ("E_VS1", models.DecimalField(decimal_places=2, max_digits=5)),
                ("E_VS2", models.DecimalField(decimal_places=2, max_digits=5)),
                ("E_SI1", models.DecimalField(decimal_places=2, max_digits=5)),
                ("E_SI2", models.DecimalField(decimal_places=2, max_digits=5)),
                ("F_IF", models.DecimalField(decimal_places=2, max_digits=5)),
                ("F_VV1", models.DecimalField(decimal_places=2, max_digits=5)),
                ("F_VV2", models.DecimalField(decimal_places=2, max_digits=5)),
                ("F_VS1", models.DecimalField(decimal_places=2, max_digits=5)),
                ("F_VS2", models.DecimalField(decimal_places=2, max_digits=5)),
                ("F_SI1", models.DecimalField(decimal_places=2, max_digits=5)),
                ("F_SI2", models.DecimalField(decimal_places=2, max_digits=5)),
                ("G_IF", models.DecimalField(decimal_places=2, max_digits=5)),
                ("G_VV1", models.DecimalField(decimal_places=2, max_digits=5)),
                ("G_VV2", models.DecimalField(decimal_places=2, max_digits=5)),
                ("G_VS1", models.DecimalField(decimal_places=2, max_digits=5)),
                ("G_VS2", models.DecimalField(decimal_places=2, max_digits=5)),
                ("G_SI1", models.DecimalField(decimal_places=2, max_digits=5)),
                ("G_SI2", models.DecimalField(decimal_places=2, max_digits=5)),
                ("H_IF", models.DecimalField(decimal_places=2, max_digits=5)),
                ("H_VV1", models.DecimalField(decimal_places=2, max_digits=5)),
                ("H_VV2", models.DecimalField(decimal_places=2, max_digits=5)),
                ("H_VS1", models.DecimalField(decimal_places=2, max_digits=5)),
                ("H_VS2", models.DecimalField(decimal_places=2, max_digits=5)),
                ("H_SI1", models.DecimalField(decimal_places=2, max_digits=5)),
                ("H_SI2", models.DecimalField(decimal_places=2, max_digits=5)),
                ("I_IF", models.DecimalField(decimal_places=2, max_digits=5)),
                ("I_VV1", models.DecimalField(decimal_places=2, max_digits=5)),
                ("I_VV2", models.DecimalField(decimal_places=2, max_digits=5)),
                ("I_VS1", models.DecimalField(decimal_places=2, max_digits=5)),
                ("I_VS2", models.DecimalField(decimal_places=2, max_digits=5)),
                ("I_SI1", models.DecimalField(decimal_places=2, max_digits=5)),
                ("I_SI2", models.DecimalField(decimal_places=2, max_digits=5)),
                ("J_IF", models.DecimalField(decimal_places=2, max_digits=5)),
                ("J_VV1", models.DecimalField(decimal_places=2, max_digits=5)),
                ("J_VV2", models.DecimalField(decimal_places=2, max_digits=5)),
                ("J_VS1", models.DecimalField(decimal_places=2, max_digits=5)),
                ("J_VS2", models.DecimalField(decimal_places=2, max_digits=5)),
                ("J_SI1", models.DecimalField(decimal_places=2, max_digits=5)),
                ("J_SI2", models.DecimalField(decimal_places=2, max_digits=5)),
                ("increased", models.TextField(max_length=500)),
                ("dropped", models.TextField(max_length=500)),
                (
                    "current_percentage_change",
                    models.DecimalField(decimal_places=2, max_digits=6, null=True),
                ),
                (
                    "last_percentage_change",
                    models.DecimalField(decimal_places=2, max_digits=6, null=True),
                ),
                (
                    "second_last_percentage_change",
                    models.DecimalField(decimal_places=2, max_digits=6, null=True),
                ),
                ("postion", models.IntegerField(unique=True)),
                (
                    "parent_table",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.maintables",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "phone_number",
                    phonenumber_field.modelfields.PhoneNumberField(
                        max_length=128, region=None
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
